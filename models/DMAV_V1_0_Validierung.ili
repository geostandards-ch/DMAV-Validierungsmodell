INTERLIS 2.4;

MODEL DMAV_V1_0_Validierung (de) 
AT "https://www.kgk-cgc.ch/" 
VERSION "2025-03-30" =
  
IMPORTS UNQUALIFIED INTERLIS;
IMPORTS UNQUALIFIED Text_V2;
IMPORTS UNQUALIFIED Math_V2_1;
IMPORTS UNQUALIFIED ObjectPool;
IMPORTS DMAVTYM_Topologie_V1_1;
IMPORTS DMAV_FixpunkteAVKategorie3_V1_0;
IMPORTS DMAV_Bodenbedeckung_V1_0;
IMPORTS DMAV_Einzelobjekte_V1_0;
IMPORTS DMAV_Nomenklatur_V1_0;
IMPORTS DMAV_Grundstuecke_V1_0;
IMPORTS DMAV_Rohrleitungen_V1_0;
IMPORTS DMAV_HoheitsgrenzenAV_V1_0;
IMPORTS DMAV_Toleranzstufen_V1_0;
IMPORTS DMAV_Gebaeudeadressen_V1_0;

    VIEW TOPIC FixpunkteKategorie3_Validierung = 
    DEPENDS ON DMAV_FixpunkteAVKategorie3_V1_0.FixpunkteAVKategorie3;
  
        VIEW v_LFP3
            PROJECTION OF DMAV_FixpunkteAVKategorie3_V1_0.FixpunkteAVKategorie3.LFP3;
        =
            ALL OF LFP3;

            !!@ ilivalid.msg="Hoehengeometrie darf nicht gleich 0.0 sein";
            !!@ ilivalid.msg_de="Hoehengeometrie darf nicht gleich 0.0 sein";
            !!@ ilivalid.msg_fr="Geomaltimetrie ne peut pas être égale à 0.0";
            !!@ ilivalid.msg_it="La quota non puo' essere uguale a 0.0, in caso di non determinazione della quota lasciare il campo vuoto";
            MANDATORY CONSTRAINT CH031151: (
                Hoehengeometrie <> 0.0
            );

            !!@ ilivalid.msg="Lagegenauigkeit von LFP3 muss <= 15 cm sein (TS1)";
            !!@ ilivalid.msg_de="Lagegenauigkeit von LFP3 muss <= 15 cm sein (TS1)";
            !!@ ilivalid.msg_fr="PrecisionPlanimetrie du PFP3 doit être <= 15 cm (NT1)";
            !!@ ilivalid.msg_it="La PrecisionePlanimetrica del PFP3 deve essere inferiore a <= 15 cm  (GT1)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH031252: (
                (DMAV_Toleranzstufe(Geometrie) == "TS1") => (Lagegenauigkeit < 0.15)
            );
            */

            !!@ ilivalid.msg="Lagegenauigkeit von LFP3 muss <= 15 cm sein (TS2)";
            !!@ ilivalid.msg_de="Lagegenauigkeit von LFP3 muss <= 15 cm sein (TS2)";
            !!@ ilivalid.msg_fr="PrecisionPlanimetrie du PFP3 doit être <= 15 cm (NT2)";
            !!@ ilivalid.msg_it="La PrecisionePlanimetrica del PFP3 deve essere inferiore a <= 15 cm  (GT2)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH031253: (
                (DMAV_Toleranzstufe(Geometrie) == "TS2") => (Lagegenauigkeit < 0.15)
            );
            */

            !!@ ilivalid.msg="Lagegenauigkeit von LFP3 muss <= 15 cm sein (TS3)";
            !!@ ilivalid.msg_de="Lagegenauigkeit von LFP3 muss <= 15 cm sein (TS3)";
            !!@ ilivalid.msg_fr="PrecisionPlanimetrie du PFP3 doit être <= 15 cm (NT3)";
            !!@ ilivalid.msg_it="La PrecisionePlanimetrica del PFP3 deve essere inferiore a <= 15 cm  (GT3)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH031254: (
                (DMAV_Toleranzstufe(Geometrie) == "TS3") => (Lagegenauigkeit < 0.15)
            );
            */


            !!@ ilivalid.msg="Lagegenauigkeit von LFP3 muss <= 30 cm sein (TS4)";
            !!@ ilivalid.msg_de="Lagegenauigkeit von LFP3 muss <= 30 cm sein (TS4)";
            !!@ ilivalid.msg_fr="PrecisionPlanimetrie du PFP3 doit être <= 30 cm (NT4)";
            !!@ ilivalid.msg_it="La PrecisionePlanimetrica del PFP3 deve essere inferiore a <= 30 cm  (GT4)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH031255: (
                (DMAV_Toleranzstufe(Geometrie) == "TS4") => (Lagegenauigkeit < 0.3)
            );
            */

            !!@ ilivalid.msg="Lagegenauigkeit von LFP3 muss <= 30 cm sein (TS5)";
            !!@ ilivalid.msg_de="Lagegenauigkeit von LFP3 muss <= 30 cm sein (TS5)";
            !!@ ilivalid.msg_fr="PrecisionPlanimetrie du PFP3 doit être <= 30 cm (NT5)";
            !!@ ilivalid.msg_it="La PrecisionePlanimetrica del PFP3 deve essere inferiore a <= 30 cm  (GT5)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH031256: (
                (DMAV_Toleranzstufe(Geometrie) == "TS5") => (Lagegenauigkeit < 0.3)
            );
            */

            !!@ ilivalid.msg="Hoehengenauigkeit von LFP3 muss <= 24 cm sein (TS1)";
            !!@ ilivalid.msg_de="Hoehengenauigkeit von LFP3 muss <= 24 cm sein (TS1)";
            !!@ ilivalid.msg_fr="PrecisionAltimetrie du PFP3 doit être <= 24 cm (NT1)";
            !!@ ilivalid.msg_it="La PrecisioneAltimetrica del PFP3 deve essere inferiore a <= 24 cm  (GT1)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH031454: (
                (DMAV_Toleranzstufe(Geometrie) == "TS1") => (Hoehengenauigkeit < 0.24)
            );
            */

            !!@ ilivalid.msg="Hoehengenauigkeit von LFP3 muss <= 24 cm sein (TS2)";
            !!@ ilivalid.msg_de="Hoehengenauigkeit von LFP3 muss <= 24 cm sein (TS2)";
            !!@ ilivalid.msg_fr="PrecisionAltimetrie du PFP3 doit être <= 24 cm (NT2)";
            !!@ ilivalid.msg_it="La PrecisioneAltimetrica del PFP3 deve essere inferiore a <= 24 cm  (GT2)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH031455: (
                (DMAV_Toleranzstufe(Geometrie) == "TS2") => (Hoehengenauigkeit < 0.24)
            );
            */

            !!@ ilivalid.msg="Hoehengenauigkeit von LFP3 muss <= 24 cm sein (TS3)";
            !!@ ilivalid.msg_de="Hoehengenauigkeit von LFP3 muss <= 24 cm sein (TS3)";
            !!@ ilivalid.msg_fr="PrecisionAltimetrie du PFP3 doit être <= 24 cm (NT3)";
            !!@ ilivalid.msg_it="La PrecisioneAltimetrica del PFP3 deve essere inferiore a <= 24 cm  (GT3)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH031456: (
                (DMAV_Toleranzstufe(Geometrie) == "TS3") => (Hoehengenauigkeit < 0.24)
            );
            */

            !!@ ilivalid.msg="Hoehengenauigkeit von LFP3 muss <= 45 cm sein (TS4)";
            !!@ ilivalid.msg_de="Hoehengenauigkeit von LFP3 muss <= 45 cm sein (TS4)";
            !!@ ilivalid.msg_fr="PrecisionAltimetrie du PFP3 doit être <= 45 cm (NT4)";
            !!@ ilivalid.msg_it="La PrecisioneAltimetrica del PFP3 deve essere inferiore a <= 45 cm  (GT4)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH031457: (
                (DMAV_Toleranzstufe(Geometrie) == "TS4") => (Hoehengenauigkeit < 0.45)
            );
            */

            !!@ ilivalid.msg="Hoehengenauigkeit von LFP3 muss <= 45 cm sein (TS5)";
            !!@ ilivalid.msg_de="Hoehengenauigkeit von LFP3 muss <= 45 cm sein (TS5)";
            !!@ ilivalid.msg_fr="PrecisionAltimetrie du PFP3 doit être <= 45 cm (NT5)";
            !!@ ilivalid.msg_it="La PrecisioneAltimetrica del PFP3 deve essere inferiore a <= 45 cm  (GT5)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH031458: (
                (DMAV_Toleranzstufe(Geometrie) == "TS5") => (Hoehengenauigkeit < 0.45)
            );
            */

        END v_LFP3;

        VIEW v_HFP3
            PROJECTION OF DMAV_FixpunkteAVKategorie3_V1_0.FixpunkteAVKategorie3.HFP3;
        =
            ALL OF HFP3;

            !!@ ilivalid.msg="Hoehengeometrie darf nicht gleich 0.0 sein";
            !!@ ilivalid.msg_de="Hoehengeometrie darf nicht gleich 0.0 sein";
            !!@ ilivalid.msg_fr="GeomAlt ne peut pas être égale à 0";
            !!@ ilivalid.msg_it="La quota non puo' essere uguale a 0";
            MANDATORY CONSTRAINT CH033551: (
                Hoehengeometrie <> 0.0
            );

            !!@ ilivalid.msg="Lagegenauigkeit von HFP3 muss <= 30 cm sein (TS1)";
            !!@ ilivalid.msg_de="Lagegenauigkeit von HFP3 muss <= 30 cm sein (TS1)";
            !!@ ilivalid.msg_fr="PrecisionPlanimetrie du PFA3 doit être <= 30 cm (NT1)";
            !!@ ilivalid.msg_it="La PrecisionePlanimetrica del PFA3 deve essere inferiore a <= 30 cm  (GT1)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH033652: (
                (DMAV_Toleranzstufe(Geometrie) == "TS1") => (Lagegenauigkeit < 0.3)
            );
            */

            !!@ ilivalid.msg="Lagegenauigkeit von HFP3 muss <= 30 cm sein (TS2)";
            !!@ ilivalid.msg_de="Lagegenauigkeit von HFP3 muss <= 30 cm sein (TS2)";
            !!@ ilivalid.msg_fr="PrecisionPlanimetrie du PFA3 doit être <= 30 cm (NT2)";
            !!@ ilivalid.msg_it="La PrecisionePlanimetrica del PFA3 deve essere inferiore a <= 30 cm  (GT2)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH033653: (
                (DMAV_Toleranzstufe(Geometrie) == "TS2") => (Lagegenauigkeit < 0.3)
            );
            */

            !!@ ilivalid.msg="Lagegenauigkeit von HFP3 muss <= 60 cm sein (TS3)";
            !!@ ilivalid.msg_de="Lagegenauigkeit von HFP3 muss <= 60 cm sein (TS3)";
            !!@ ilivalid.msg_fr="PrecisionPlanimetrie du PFA3 doit être <= 60 cm (NT3)";
            !!@ ilivalid.msg_it="La PrecisionePlanimetrica del PFA3 deve essere inferiore a <= 60 cm  (GT3)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH033654: (
                (DMAV_Toleranzstufe(Geometrie) == "TS3") => (Lagegenauigkeit < 0.6)
            );
            */

            !!@ ilivalid.msg="Lagegenauigkeit von HFP3 muss <= 150 cm sein (TS4)";
            !!@ ilivalid.msg_de="Lagegenauigkeit von HFP3 muss <= 150 cm sein (TS4)";
            !!@ ilivalid.msg_fr="PrecisionPlanimetrie du PFA3 doit être <= 150 cm (NT4)";
            !!@ ilivalid.msg_it="La PrecisionePlanimetrica del PFA3 deve essere inferiore a <= 150 cm  (GT4)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH033655: (
                (DMAV_Toleranzstufe(Geometrie) == "TS4") => (Lagegenauigkeit < 1.5)
            );
            */

            !!@ ilivalid.msg="Lagegenauigkeit von HFP3 muss <= 300 cm sein (TS5)";
            !!@ ilivalid.msg_de="Lagegenauigkeit von HFP3 muss <= 300 cm sein (TS5)";
            !!@ ilivalid.msg_fr="PrecisionPlanimetrie du PFA3 doit être <= 300 cm (NT5)";
            !!@ ilivalid.msg_it="La PrecisionePlanimetrica del PFA3 deve essere inferiore a <= 300 cm  (GT5)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH033656: (
                (DMAV_Toleranzstufe(Geometrie) == "TS5") => (Lagegenauigkeit < 3.0)
            );
            */

            !!@ ilivalid.msg="Hoehengenauigkeit von HFP3 muss <= 2.1 cm sein (TS1)";
            !!@ ilivalid.msg_de="Hoehengenauigkeit von HFP3 muss <= 2.1 cm sein (TS1)";
            !!@ ilivalid.msg_fr="PrecisionAltimetrie du PFA3 doit être <= 2.1 cm (NT1)";
            !!@ ilivalid.msg_it="La PrecisioneAltimetrica del PFA3 deve essere inferiore a <= 2.1 cm  (GT1)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH033852: (
                (DMAV_Toleranzstufe(Geometrie) == "TS1") => (Hoehengenauigkeit < 0.021)
            );
            */

            !!@ ilivalid.msg="Hoehengenauigkeit von HFP3 muss <= 2.1 cm sein (TS2)";
            !!@ ilivalid.msg_de="Hoehengenauigkeit von HFP3 muss <= 2.1 cm sein (TS2)";
            !!@ ilivalid.msg_fr="PrecisionAltimetrie du PFA3 doit être <= 2.1 cm (NT2)";
            !!@ ilivalid.msg_it="La PrecisioneAltimetrica del PFA3 deve essere inferiore a <= 2.1 cm  (GT2)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH033853: (
                (DMAV_Toleranzstufe(Geometrie) == "TS2") => (Hoehengenauigkeit < 0.021)
            );
            */

            !!@ ilivalid.msg="Hoehengenauigkeit von HFP3 muss <= 2.1 cm sein (TS3)";
            !!@ ilivalid.msg_de="Hoehengenauigkeit von HFP3 muss <= 2.1 cm sein (TS2)";
            !!@ ilivalid.msg_fr="PrecisionAltimetrie du PFA3 doit être <= 2.1 cm (NT3)";
            !!@ ilivalid.msg_it="La PrecisioneAltimetrica del PFA3 deve essere inferiore a <= 2.1 cm  (GT3)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH033854: (
                (DMAV_Toleranzstufe(Geometrie) == "TS3") => (Hoehengenauigkeit < 0.021)
            );
            */

            !!@ ilivalid.msg="Hoehengenauigkeit von HFP3 muss <= 2.1 cm sein (TS4)";
            !!@ ilivalid.msg_de="Hoehengenauigkeit von HFP3 muss <= 2.1 cm sein (TS4)";
            !!@ ilivalid.msg_fr="PrecisionAltimetrie du PFA3 doit être <= 2.1 cm (NT4)";
            !!@ ilivalid.msg_it="La PrecisioneAltimetrica del PFA3 deve essere inferiore a <= 2.1 cm  (GT4)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH033855: (
                (DMAV_Toleranzstufe(Geometrie) == "TS4") => (Hoehengenauigkeit < 0.021)
            );
            */

            !!@ ilivalid.msg="Hoehengenauigkeit von HFP3 muss <= 2.1 cm sein (TS5)";
            !!@ ilivalid.msg_de="Hoehengenauigkeit von HFP3 muss <= 2.1 cm sein (TS5)";
            !!@ ilivalid.msg_fr="PrecisionAltimetrie du PFA3 doit être <= 2.1 cm (NT5)";
            !!@ ilivalid.msg_it="La PrecisioneAltimetrica del PFA3 deve essere inferiore a <= 2.1 cm  (GT5)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH033856: (
                (DMAV_Toleranzstufe(Geometrie) == "TS5") => (Hoehengenauigkeit < 0.021)
            );
            */

        END v_HFP3;

    END FixpunkteKategorie3_Validierung;

    VIEW TOPIC Bodenbedeckung_Validierung = 
    DEPENDS ON DMAV_Bodenbedeckung_V1_0.Bodenbedeckung;
  
        VIEW v_Bodenbedeckung
            PROJECTION OF DMAV_Bodenbedeckung_V1_0.Bodenbedeckung.Bodenbedeckung;
        =
            ALL OF Bodenbedeckung;

            !!@ ilivalid.msg="Flächenperimeter muss mit Referenzperimeter der Liegenschaften übereinstimmen (Toleranz 2 mm)";
            !!@ ilivalid.msg_de="Flächenperimeter muss mit Referenzperimeter der Liegenschaften übereinstimmen (Toleranz 2 mm)";
            !!@ ilivalid.msg_fr="Le périmètre doit être identique au périmètre de référence des biens-fonds (tolérance 2 mm)";
            !!@ ilivalid.msg_it="Il perimetro deve coincidere con il perimetro di riferimento del bene immobile (Tolleranza 2 mm)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            SET CONSTRAINT CH043451 WHERE Objektstatus==#real:
                DMAV_vergleichePerimeter(DMAV_Perimeter(ALL,"Geometrie"),"Liegenschaft",0.002);
            */

            !!@ ilivalid.msg="Messpunkt darf kein Grenzpunkt, LFP1, LFP2 oder LFP3 sein";
            !!@ ilivalid.msg_de="Messpunkt darf kein Grenzpunkt, LFP1, LFP2 oder LFP3 sein";
            !!@ ilivalid.msg_fr="Le PointMesure ne doit pas être un point_limite, PFP1, PFP2 ou PFP3";
            !!@ ilivalid.msg_it="Il punto di misura non deve essere un punto limite, PFP1, PFP2 o PFP3.";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH043452: (
                NOT(DMAV_PunktIn(Geometrie,"LFP1,LFP2,LFP3,Grenzpunkt"))
            );
            */

            !!@ ilivalid.msg="Gebäude hat keinen EGID";
            !!@ ilivalid.msg_de="MGebäude hat keinen EGID";
            !!@ ilivalid.msg_fr="Le bâtiment n'a pas d'EGID";
            !!@ ilivalid.msg_it="L'edificio non ha un EGID";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;           
            MANDATORY CONSTRAINT CH043453 : (Objektstatus == #real) AND (Bodenbedeckungsart == #Gebaeude) => DEFINED(EGID);

            !!@ ilivalid.msg="Der gleiche EGID (Topic BB) wird für verschiedene Gebäude verwendet";
            !!@ ilivalid.msg_de="Der gleiche EGID (Topic BB) wird für verschiedene Gebäude verwendet";
            !!@ ilivalid.msg_fr="Le même EGID (topic CS) est renseigné pour plusieurs bâtiments différents";
            !!@ ilivalid.msg_it="Lo stesso EGID (topic CS) è assegnato a più edifici differenti";
            !! Umsetzung Phase 1; -> Kommentar Romedi: Gilt nur innerhalb eines Operats. Vergleich eindeutige EGID in Gebäudenummer und Gebäudeeingang
            
            /*SET CONSTRAINT GWRA09: WHERE Bodenbedeckungsart==#Gebaeude:
                DMAV_Unique(ALL,"EGID");*/
            UNIQUE GWRA09 : WHERE Bodenbedeckungsart==#Gebaeude: EGID;

            !!@ ilivalid.msg="EGID existiert nicht im GWR";
            !!@ ilivalid.msg_de="EGID existiert nicht im GWR";
            !!@ ilivalid.msg_fr="L'EGID n'existe pas dans le RegBL";
            !!@ ilivalid.msg_it="L'EGID non esiste nel REA";
            !! Umsetzung Phase 3;
            /*
            MANDATORY CONSTRAINT GWRC02a WHERE DEFINED(EGID):
                 DMAV_GWR("C02");
            */

        END v_Bodenbedeckung;

    END Bodenbedeckung_Validierung;

    VIEW TOPIC Einzelobjekte_Validierung = 
    DEPENDS ON DMAV_Einzelobjekte_V1_0.Einzelobjekte;
  
        VIEW v_Einzelobjekt
            PROJECTION OF DMAV_Einzelobjekte_V1_0.Einzelobjekte.Einzelobjekt;
        =
            ALL OF Einzelobjekt;

            !!@ ilivalid.msg="Bei Art=Rinnsal muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_de="Bei Art=Rinnsal muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=ru, il faut définir la géométrie dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere ruscello la geometria deve essere del tipo elemento lineare";
            MANDATORY CONSTRAINT CH051151: (
                (Einzelobjektart == #Rinnsal) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) > 0) AND (objectCount(Punktelement) == 0))
            );
    
            !!@ ilivalid.msg="Bei Art=schmaler_Weg muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_de="Bei Art=schmaler_Weg muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=sentier, il faut définir la géométrie dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere sentiero la geometria deve essere del tipo elemento lineare";
            MANDATORY CONSTRAINT CH051152: (
                (Einzelobjektart == #schmaler_Weg) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) > 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Druckleitung muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_de="Bei Art=Druckleitung muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=conduite_forcee, il faut définir la géométrie dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere condotta forzata la geometria deve essere del tipo elemento lineare";
            MANDATORY CONSTRAINT CH051153: (
                (Einzelobjektart == #Druckleitung) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) > 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Bahngeleise muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_de="Bei Art=Bahngeleise muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=voie_ferree, il faut définir la géométrie dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere binari_ferrovia la geometria deve essere del tipo elemento lineare";
            MANDATORY CONSTRAINT CH051154: (
                (Einzelobjektart == #Bahngeleise) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) > 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Luftseilbahn muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_de="Bei Art=Luftseilbahn muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=telepherique, il faut définir la géométrie dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere teleferica la geometria deve essere del tipo elemento lineare";
            MANDATORY CONSTRAINT CH051155: (
                (Einzelobjektart == #Luftseilbahn) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) > 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Gondelbahn_Sesselbahn muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_de="Bei Art=Gondelbahn_Sesselbahn muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=telecabine_telesiege, il faut définir la géométrie dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere telecabina_seggiovia la geometria deve essere del tipo elemento lineare";
            MANDATORY CONSTRAINT CH051156: (
                (Einzelobjektart == #Gondelbahn_Sesselbahn) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) > 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Materialseilbahn muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_de="Bei Art=Materialseilbahn muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=telepherique_de_chantier, il faut définir la géométrie dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere teleferica_per_il_materiale la geometria deve essere del tipo elemento lineare";
            MANDATORY CONSTRAINT CH051157: (
                (Einzelobjektart == #Materialseilbahn) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) > 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Skilift muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_de="Bei Art=Skilift muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=skilift, il faut définir la géométrie dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere scilift la geometria deve essere del tipo elemento lineare";
            MANDATORY CONSTRAINT CH051158: (
                (Einzelobjektart == #Skilift) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) > 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Faehre muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_de="Bei Art=Faehre muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=bac, il faut définir la géométrie dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere traghetto la geometria deve essere del tipo elemento lineare";
            MANDATORY CONSTRAINT CH051159: (
                (Einzelobjektart == #Faehre) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) > 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Grotte_Hoehleneingang muss die Geometrie in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Grotte_Hoehleneingang muss die Geometrie in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=grotte_entree_de_caverne, il faut définir la géométrie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere grotta_entrata_di_caverna la geometria deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH051160: (
                (Einzelobjektart == #Grotte_Hoehleneingang) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) == 0) AND (objectCount(Punktelement) > 0))
            );

            !!@ ilivalid.msg="Bei Art=wichtiger_Einzelbaum muss die Geometrie in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=wichtiger_Einzelbaum muss die Geometrie in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=arbre_isole_important, il faut définir la géométrie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere albero_importante la geometria deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH051161: (
                (Einzelobjektart == #wichtiger_Einzelbaum) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) == 0) AND (objectCount(Punktelement) > 0))
            );

            !!@ ilivalid.msg="Bei Art=Bildstock_Kruzifix muss die Geometrie in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Bildstock_Kruzifix muss die Geometrie in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=statue_crucifix, il faut définir la géométrie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere cappella_statua_crocifisso la geometria deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH051162: (
                (Einzelobjektart == #Bildstock_Kruzifix) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) == 0) AND (objectCount(Punktelement) > 0))
            );

            !!@ ilivalid.msg="Bei Art=Quelle muss die Geometrie in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Quelle muss die Geometrie in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=source, il faut définir la géométrie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere sorgente la geometria deve essere del tipo puntiforme";
            !!@ cprof="all";
            MANDATORY CONSTRAINT CH051163: (
                (Einzelobjektart == #Quelle) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) == 0) AND (objectCount(Punktelement) > 0))
            );

            !!@ ilivalid.msg="Bei Art=Bezugspunkt muss die Geometrie in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Bezugspunkt muss die Geometrie in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=point_de_reference, il faut définir la géométrie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere punto_di_riferimento la geometria deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH051164: (
                (Einzelobjektart == #Bezugspunkt) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) == 0) AND (objectCount(Punktelement) > 0))
            );

            !!@ ilivalid.msg="Bei Art=Achse muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_de="Bei Art=Achse muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=axe, il faut définir la géométrie dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere asse la geometria deve essere del tipo elemento lineare";
            MANDATORY CONSTRAINT CH051165: (
                (Einzelobjektart == #Achse) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) > 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Unterstand muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_de="Bei Art=Unterstand muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=couvert_independant, il faut définir la géométrie dans la table Element_surfacique";
            !!@ ilivalid.msg_it="Per il genere riparo la geometria deve essere con superficie";
            !!@ cprof="all";
            MANDATORY CONSTRAINT CH051651: (
                (Einzelobjektart == #Unterstand) => ((objectCount(Flaechenelement) > 0) AND (objectCount(Linienelement) == 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Hochkamin muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_de="Bei Art=Hochkamin muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=cheminee, il faut définir la géométrie dans la table Element_surfacique";
            !!@ ilivalid.msg_it="Per il genere ciminiera la geometria deve essere con superficie";
            MANDATORY CONSTRAINT CH051652: (
                (Einzelobjektart == #Hochkamin) => ((objectCount(Flaechenelement) > 0) AND (objectCount(Linienelement) == 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=schmale_bestockte_Flaeche muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_de="Bei Art=schmale_bestockte_Flaeche muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=cordon_boise, il faut définir la géométrie dans la table Element_surfacique";
            !!@ ilivalid.msg_it="Per il genere fascia_boscata la geometria deve essere con superficie";
            MANDATORY CONSTRAINT CH051653: (
                (Einzelobjektart == #schmale_bestockte_Flaeche) => ((objectCount(Flaechenelement) > 0) AND (objectCount(Linienelement) == 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Silo_Turm_Gasometer muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_de="Bei Art=Silo_Turm_Gasometer muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=Silo_tour_gazometre, il faut définir la géométrie dans la table Element_surfacique";
            !!@ ilivalid.msg_it="Per il genere silo_torre_gasoemetro la geometria deve essere con superficie";
            !!@ cprof="all";
            MANDATORY CONSTRAINT CH051659: (
                (Einzelobjektart == #Silo_Turm_Gasometer) => ((objectCount(Flaechenelement) > 0) AND (objectCount(Linienelement) == 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Landungssteg darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Landungssteg muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=Debarcadere, il faut définir la géométrie dans la table Element_surfacique";
            !!@ ilivalid.msg_it="Per il genere debarcadero la geometria deve essere con superficie";
            MANDATORY CONSTRAINT CH051660: (
                (Einzelobjektart == #Landungssteg) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=unterirdisches Gebaeude darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=unterirdisches Gebaeude darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=batiment_souterrain, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere edificio_sotterraneo la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052151: (
                (Einzelobjektart == #unterirdisches_Gebaeude) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=eingedoltes_oeffentliches_Gewaesser darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=eingedoltes_oeffentliches_Gewaesser darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=eau_canalisee_souterraine, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere acqua_sotterranea_canalizzata la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052152: (
                (Einzelobjektart == #eingedoltes_oeffentliches_Gewaesser) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=wichtige_Treppe darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=wichtige_Treppe darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=escalier_important, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere scala importante la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052153: (
                (Einzelobjektart == #wichtige_Treppe) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=Tunnel_Unterfuehrung_Galerie darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Tunnel_Unterfuehrung_Galerie darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=tunnel_passage_inferieur_galerie, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere tunnel_sottopassaggio_galleria la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052154: (
                (Einzelobjektart == #Tunnel_Unterfuehrung_Galerie) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=Bruecke_Passerelle darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Bruecke_Passerelle darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=pont_passerelle, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere ponte passerella la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052155: (
                (Einzelobjektart == #Bruecke_Passerelle) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=Bahnsteig muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_de="Bei Art=Bahnsteig muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=quai, il faut définir la géométrie dans la table Element_surfacique";
            !!@ ilivalid.msg_it="Per il genere banchina la geometria deve essere con superficie";
            MANDATORY CONSTRAINT CH052156: (
                (Einzelobjektart == #Bahnsteig) => ((objectCount(Flaechenelement) > 0) AND (objectCount(Linienelement) == 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Brunnen darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Brunnen darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=fontaine, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere fontana la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052157: (
                (Einzelobjektart == #Brunnen) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=Reservoir darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Reservoir darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=reservoir, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere serbatoio la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052158: (
                (Einzelobjektart == #Reservoir) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=Pfeiler darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Pfeiler darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=pilier, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere pilastro la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052159: (
                (Einzelobjektart == #Pfeiler) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=Uferverbauung muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_de="Bei Art=Uferverbauung muss die Geometrie in Flaechenelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=ouvrage_de_protection_des_rives, il faut définir la géométrie dans la table Element_surfacique ou dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere briglia la geometria deve essere con superficie";
            MANDATORY CONSTRAINT CH052162: (
                (Einzelobjektart == #Uferverbauung) => ((objectCount(Flaechenelement) > 0) AND (objectCount(Linienelement) == 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=Schwelle darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Schwelle darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=seuil, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere arginatura la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052163: (
                (Einzelobjektart == #Schwelle) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=Lawinenverbauung muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_de="Bei Art=Lawinenverbauung muss die Geometrie in Linienelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=paravalanche, il faut définir la géométrie dans la table Element_lineaire";
            !!@ ilivalid.msg_it="Per il genere=riparo_antivalanghe la geometria deve essere del tipo elemento lineare";
            MANDATORY CONSTRAINT CH052164: (
                (Einzelobjektart == #Lawinenverbauung) => ((objectCount(Flaechenelement) == 0) AND (objectCount(Linienelement) > 0) AND (objectCount(Punktelement) == 0))
            );

            !!@ ilivalid.msg="Bei Art=massiver_Sockel darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=massiver_Sockel darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=socle_massif, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere zoccolo_massiccio la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052165: (
                (Einzelobjektart == #massiver_Sockel) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=Ruine_archaeologisches_Objekt darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Ruine_archaeologisches_Objekt darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=ruine_objet_archeologique, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere rovina_oggetto_archeologico la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052166: (
                (Einzelobjektart == #Ruine_archaeologisches_Objekt) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=Hochspannungsfreileitung darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Hochspannungsfreileitung darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=ligne_aerienne_a_haute_tension, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere linea_aerea_ad_alta_tensione la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052171: (
                (Einzelobjektart == #Hochspannungsfreileitung) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=Mauer darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Mauer darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=mur, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere muro la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052177: (
                (Einzelobjektart == #Mauer) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Bei Art=uebriger_Gebaeudeteil darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=uebriger_Gebaeudeteil darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=autre_corps_de_batiment, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere altra_parte_di_edificio la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052178: (
                (Einzelobjektart == #uebriger_Gebaeudeteil) => (objectCount(Punktelement) == 0)
            );
			
		    !!@ ilivalid.msg="Bei Art=Jauchengrube_Mistlege darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_de="Bei Art=Jauchengrube_Mistlege darf die Geometrie nicht in Punktelement sein";
            !!@ ilivalid.msg_fr="Pour les objets du Genre=fosse_purin_tas_fumier, la géométrie ne peut pas être définie dans la table Element_ponctuel";
            !!@ ilivalid.msg_it="Per il genere Pozzo nero la geometria non deve essere del tipo puntiforme";
            MANDATORY CONSTRAINT CH052178: (
                (Einzelobjektart == #Jauchengrube_Mistlege) => (objectCount(Punktelement) == 0)
            );

            !!@ ilivalid.msg="Messpunkt darf kein Grenzpunkt, LFP1, LFP2 oder LFP3 sein";
            !!@ ilivalid.msg_de="Messpunkt darf kein Grenzpunkt, LFP1, LFP2 oder LFP3 sein";
            !!@ ilivalid.msg_fr="Le PointMesure ne doit pas être un point_limite, PFP1, PFP2 ou PFP3";
            !!@ ilivalid.msg_it="Il punto di misura non deve essere un punto limite, PFP1, PFP2 o PFP3.";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH054351: (
                NOT(DMAV_PunktIn(Geometrie,"LFP1,LFP2,LFP3,Grenzpunkt"))
            );
            */

            !!@ ilivalid.msg="EGID existiert nicht im GWR";
            !!@ ilivalid.msg_de="EGID existiert nicht im GWR";
            !!@ ilivalid.msg_fr="L'EGID n'existe pas dans le RegBL";
            !!@ ilivalid.msg_it="L'EGID non esiste nel REA";
            !! Umsetzung Phase 3;
            /*
            MANDATORY CONSTRAINT GWRC02c: (
                DEFINED(EGID) => DMAV_GWR("C02")
            );
            */

        END v_Einzelobjekt;

    END Einzelobjekte_Validierung;

    VIEW TOPIC Nomenklatur_Validierung = 
    DEPENDS ON DMAV_Nomenklatur_V1_0.Nomenklatur;
    
        VIEW v_Flurname
            PROJECTION OF DMAV_Nomenklatur_V1_0.Nomenklatur.Flurname;
        =
            ALL OF Flurname;

            !!@ ilivalid.msg="Flächenperimeter muss mit Referenzperimeter der Liegenschaften übereinstimmen (Toleranz 2 mm)";
            !!@ ilivalid.msg_de="Flächenperimeter muss mit Referenzperimeter der Liegenschaften übereinstimmen (Toleranz 2 mm)";
            !!@ ilivalid.msg_fr="Le périmètre doit être identique au périmètre de référence des biens-fonds (tolérance 2 mm)";
            !!@ ilivalid.msg_it="Il perimetro deve corrispondere con quello dei beni immobili (Tolleranza 2 mm)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            SET CONSTRAINT CH070951 WHERE DEFINED(Entstehung) AND NOT(DEFINED(Untergang)):
                DMAV_vergleichePerimeter(DMAV_Perimeter(ALL,"Geometrie"),"Liegenschaft",0.002);
            */

        END v_Flurname;

    END Nomenklatur_Validierung;



    VIEW TOPIC Grundstuecke_Validierung = 
    DEPENDS ON DMAV_Grundstuecke_V1_0.Grundstuecke;
  
        VIEW v_Grundstueck
            PROJECTION OF DMAV_Grundstuecke_V1_0.Grundstuecke.Grundstueck;
        =
            ALL OF Grundstueck;

            !!@ ilivalid.msg="EGRID darf nicht mit der Zahl 0 beginnen";            
            !!@ ilivalid.msg_de="EGRID darf nicht mit der Zahl 0 beginnen";
            !!@ ilivalid.msg_fr="L'EGRID ne doit pas commencer par un 0 (zéro)";
            !!@ ilivalid.msg_it="L'EGRID non deve comincare con uno 0 (zero)";
            MANDATORY CONSTRAINT CH085554: (
                substring(EGRID,0,1) != "0" 
            );

            !!@ ilivalid.msg="Bei Grundstueck mit istVollstaendigkeit=true und mit nur 1 Objekt in Liegenschaft muss NummerTeilgrundstueck leer sein";
            !!@ ilivalid.msg_de="Bei Grundstueck mit istVollstaendigkeit=true und mit nur 1 Objekt in Liegenschaft muss NummerTeilgrundstueck leer sein";
            !!@ ilivalid.msg_fr="Pour un immeuble dont l'attribut Integralite=complet, et formé d'un seul objet dans la table Bien_fonds, l'attribut PartieNumeroImmeuble doit être vide";
            !!@ ilivalid.msg_it="Per i fondi con integralità = si, e un solo oggetto in Bene_immobile, numero_parte_fondo deve restare vuoto";
            MANDATORY CONSTRAINT CH086852: (
                (THIS->IstVollstaendig AND elementCount(Liegenschaft) == 1) => NOT(DEFINED(Liegenschaft->NummerTeilgrundstueck)) 
            );

            !!@ ilivalid.msg="Summe der Teilflaechen aus Flaechenmass ist ungleich Gesamtflaechenmass";
            !!@ ilivalid.msg_de="Summe der Teilflaechen aus Flaechenmass ist ungleich Gesamtflaechenmass";
            !!@ ilivalid.msg_fr="La somme des parties de surface inscrite sous Superficie n'est pas égale à la donnée correspondante sous SuperficieTotale";
            !!@ ilivalid.msg_it="La somma delle superfici delle parti di Bene_immobile/DSSP/Miniera non corrisponde alla superficie totale del fondo";
            !! Failcase für Testsuite erstellt (Testsuite_DMAV/DMAV_V1_0_Validierung/DMAV_V1_0_Validierung.Grundstuecke_Validierung.v_Grundstueck.CH085952)
            MANDATORY CONSTRAINT CH085952: 
                Gesamtflaechenmass == Math_V2_1.add(Math_V2_1.add(Math_V2_1.sum("THIS->Liegenschaft->Flaechenmass"),Math_V2_1.sum("THIS->SelbstaendigesDauerndesRecht->Flaechenmass")),Math_V2_1.sum("THIS->Bergwerk->Flaechenmass")
            );

            !!@ ilivalid.msg="EGRID Prüfziffer stimmt nicht";
            !!@ ilivalid.msg_de="EGRID Prüfziffer stimmt nicht";
            !!@ ilivalid.msg_fr="Le caractère de contrôle EGRID est erroné";
            !!@ ilivalid.msg_it="La cifra di controllo EGRID è errata";
            !! Umsetzung Phase 1;
            !! Failcase für Testsuite erstellt (Testsuite_DMAV/DMAV_V1_0_Validierung/DMAV_V1_0_Validierung.Grundstuecke_Validierung.v_Grundstueck.CH085551)
            MANDATORY CONSTRAINT CH085551: (
                Math_V2_1.toNumeric(substring(EGRID, 12, 14)) == (97 - Math_V2_1.mod(Math_V2_1.toNumeric(substring(EGRID, 2, 12)), 97))
            );

        END v_Grundstueck;

        VIEW v_Liegenschaft
            PROJECTION OF DMAV_Grundstuecke_V1_0.Grundstuecke.Liegenschaft;
        =
            ALL OF Liegenschaft;

            !!@ ilivalid.check = warning
            !!@ ilivalid.msg="Punkt muss in LFP3 oder Grenzpunkt vorkommen, ausser bei fiktiven Grundstuecken";
            !!@ ilivalid.msg_de="Punkt muss in LFP3 oder Grenzpunkt vorkommen, ausser bei fiktiven Grundstuecken";
            !!@ ilivalid.msg_fr="Le point doit figurer dans le PFP3 ou le point_limite, sauf pour les immeubles fictifs.";
            !!@ ilivalid.msg_it="Il punto deve comparire in PFP3 o in point_limite, ad eccezione degli edifici fittizi.";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH086951: (
                NOT(Fiktiv) => DMAV_PunktIn(Geometrie,"LFP3,Grenzpunkt") 
            );
            */

            !!@ ilivalid.msg="NummerTeilgrundstueck muss innerhalb des gleichen Grundstuecks eindeutig sein";
            !!@ ilivalid.msg_de="NummerTeilgrundstueck muss innerhalb des gleichen Grundstuecks eindeutig sein";
            !!@ ilivalid.msg_fr="L'attribut PartieNumeroImmeubledoit être univoque pour un même immeuble";
            !!@ ilivalid.msg_it="Il NumeroParteFondo deve essere univoco all'interno dello stesso fondo";
            UNIQUE CH086851: NummerTeilgrundstueck, Grundstueck;

        END v_Liegenschaft;

        VIEW v_SelbstaendigesDauerndesRecht
            PROJECTION OF DMAV_Grundstuecke_V1_0.Grundstuecke.SelbstaendigesDauerndesRecht;
        =
            ALL OF SelbstaendigesDauerndesRecht;

            !!@ ilivalid.msg="NummerTeilgrundstueck muss innerhalb des gleichen Grundstuecks eindeutig sein";
            !!@ ilivalid.msg_de="NummerTeilgrundstueck muss innerhalb des gleichen Grundstuecks eindeutig sein";
            !!@ ilivalid.msg_fr="L'attribut PartieNumeroImmeubledoit être univoque pour un même immeuble";
            !!@ ilivalid.msg_it="Il NumeroParteFondo deve essere univoco all'interno dello stesso fondo";
            UNIQUE CH087251: NummerTeilgrundstueck, Grundstueck;

            !!@ ilivalid.msg="Bei Grundstueck mit IstVollstaendig=true und mit nur 1 Objekt in SelbstaendigDauerndesRecht muss NummerTeilgrundstueck leer sein";
            !!@ ilivalid.msg_de="Bei Grundstueck mit IstVollstaendig=true und mit nur 1 Objekt in SelbstaendigDauerndesRecht muss NummerTeilgrundstueck leer sein";
            !!@ ilivalid.msg_fr="Pour un immeuble dont l'attribut EstComplete=true, et formé d'un seul objet dans la table droit_distinct_permanent, l'attribut PartieNumeroImmeuble doit être vide";
            !!@ ilivalid.msg_it="Per i fondi con integralità=true, e un solo oggetto in DPSSP, numero_parte_fondo deve restare vuoto";
            !! Failcase für Testsuite erstellt (Testsuite_DMAV/DMAV_V1_0_Validierung/DMAV_V1_0_Validierung.Grundstuecke_Validierung.v_Grundstueck.CH087252)
            MANDATORY CONSTRAINT CH087252: (Grundstueck->IstVollstaendig AND INTERLIS.objectCount(THIS->SelbstaendigesDauerndesRecht) == 1) => NOT(DEFINED(THIS->SelbstaendigesDauerndesRecht->NummerTeilgrundstueck));

            !!@ ilivalid.msg="Fehlender oder unzulässiger Stützpunkt";
            !!@ ilivalid.msg_de="Fehlender oder unzulässiger Stützpunkt";
            !!@ ilivalid.msg_fr="Il manque un point d'appui, ou bien le point d'appui est erroné";
            !!@ ilivalid.msg_it="La definizione del confine passa per un punto mancante o errato";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH087351: (
                DMAV_PunktIn(Geometrie,"LFP1,LFP2,LFP3,Grenzpunkt") 
            );
            */

        END v_SelbstaendigesDauerndesRecht;


        VIEW v_Bergwerk
            PROJECTION OF DMAV_Grundstuecke_V1_0.Grundstuecke.Bergwerk;
        =
            ALL OF Bergwerk;

            !!@ ilivalid.msg="NummerTeilgrundstueck muss innerhalb des gleichen Grundstücks eindeutig sein";
            !!@ ilivalid.msg_de="NummerTeilgrundstueck muss innerhalb des gleichen Grundstücks eindeutig sein";
            !!@ ilivalid.msg_fr="PartieNumeroImmeuble doit être univoque à l'intérieur du même immeuble";
            !!@ ilivalid.msg_it="Il NumeroParteFondo deve essere univoco all'interno dello stesso fondo";
            UNIQUE CH087651: NummerTeilgrundstueck, Grundstueck;

            !!@ ilivalid.msg="Bei Grundstueck mit istVollstaendig=true und mit nur 1 Objekt in Bergwerk muss NummerTeilgrundstueck leer sein";
            !!@ ilivalid.msg_de="Bei Grundstueck mit istVollstaendig=true und mit nur 1 Objekt in Bergwerk muss NummerTeilgrundstueck leer sein";
            !!@ ilivalid.msg_fr="Pour un immeuble dont l'attribut EstComplete=true, et formé d'un seul objet dans la table Mine, l'attribut PartieNumeroImmeuble doit être vide";
            !!@ ilivalid.msg_it="Per i fondi con integralità = si, e un solo oggetto in miniera, numero_parte_fondo deve restare vuoto";
            MANDATORY CONSTRAINT CH087652: (Grundstueck->IstVollstaendig AND INTERLIS.objectCount(THIS->Bergwerk) == 1) => NOT(DEFINED(THIS->Bergwerk->NummerTeilgrundstueck));

        END v_Bergwerk;


    END Grundstuecke_Validierung;

    VIEW TOPIC Rohrleitungen_Validierung = 
    DEPENDS ON DMAV_Rohrleitungen_V1_0.Rohrleitungen;
  
        VIEW v_Leitungsobjekt
            PROJECTION OF DMAV_Rohrleitungen_V1_0.Rohrleitungen.Leitungsobjekt;
        =
            ALL OF Leitungsobjekt;

            !!@ ilivalid.msg="Hoehe darf nicht 0.0 sein";
            !!@ ilivalid.msg_de="Hoehe darf nicht 0.0 sein";
            !!@ ilivalid.msg_fr="L'altitude ne peut pas être égale à 0";
            !!@ ilivalid.msg_it="La quota non puo' essere 0";
            MANDATORY CONSTRAINT CH092551: (
                Punktelement->Hoehengeometrie <> 0.0
            );

        END v_Leitungsobjekt;

    END Rohrleitungen_Validierung;

    VIEW TOPIC HoheitsgrenzenAV_Validierung = 
    DEPENDS ON DMAV_HoheitsgrenzenAV_V1_0.HoheitsgrenzenAV;
  
        VIEW v_Gemeinde
            PROJECTION OF DMAV_HoheitsgrenzenAV_V1_0.HoheitsgrenzenAV.Gemeinde;
        =
            ALL OF Gemeinde;

            !!@ ilivalid.msg="Unbekannte oder falsche Gemeinde";
            !!@ ilivalid.msg_de="Unbekannte oder falsche Gemeinde";
            !!@ ilivalid.msg_fr="Commune inconnue ou fausse";
            !!@ ilivalid.msg_it="Il comune è sconosciuto o errato";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH112352: (
                DMAV_Gemeinde(BFSNummer,Name) 
            );
            */

        END v_Gemeinde;

        VIEW v_Gemeindegrenze
            PROJECTION OF DMAV_HoheitsgrenzenAV_V1_0.HoheitsgrenzenAV.Gemeindegrenze;
        =
            ALL OF Gemeindegrenze;

            !!@ ilivalid.msg="Flächenperimeter muss mit Referenzperimeter der Liegenschaften übereinstimmen (Toleranz 2 mm)";
            !!@ ilivalid.msg_de="Flächenperimeter muss mit Referenzperimeter der Liegenschaften übereinstimmen (Toleranz 2 mm)";
            !!@ ilivalid.msg_fr="Le périmètre doit être identique au périmètre de référence des biens-fonds (tolérance 2 mm)";
            !!@ ilivalid.msg_it="Il perimetro deve coincidere con il perimetro di riferimento del bene immobile (Tolleranza 2 mm)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            SET CONSTRAINT CH113051 WHERE DEFINED(Entstehung) AND NOT(DEFINED(Untergang)):
                DMAV_vergleichePerimeter(DMAV_Perimeter(ALL,"Geometrie"),"Liegenschaft",0.002);
            */
        
        END v_Gemeindegrenze;

        VIEW v_Bezirksgrenzabschnitt
            PROJECTION OF DMAV_HoheitsgrenzenAV_V1_0.HoheitsgrenzenAV.Bezirksgrenzabschnitt;
        =
            ALL OF Bezirksgrenzabschnitt;

            !!@ ilivalid.msg="Grenzverlauf der Bezirksgrenze muss identisch mit Gemeindegrenze sein";
            !!@ ilivalid.msg_de="Grenzverlauf der Bezirksgrenze muss identisch mit Gemeindegrenze sein";
            !!@ ilivalid.msg_fr="Le tracé de la limite de district doit être identique au tracé de la limite communale";
            !!@ ilivalid.msg_it="L'andamento dei confini distrettuali deve corrispondere con quelli comunali";
            !! Umsetzung Phase 1;
            !! Failcase für Testsuite erstellt (Testsuite_DMAV/DMAV_V1_0_Validierung/DMAV_V1_0_Validierung.HoheitsgrenzenAV_Validierung.v_Bezirksgrenzabschnitt.CH120153)
            MANDATORY CONSTRAINT CH120153: (
                DMAVTYM_Topologie_V1_1.coversWithTolerance(ObjectPool.allObjects(>DMAV_HoheitsgrenzenAV_V1_0.HoheitsgrenzenAV.Gemeindegrenze), >>DMAV_HoheitsgrenzenAV_V1_0.HoheitsgrenzenAV.Gemeindegrenze->Geometrie, THIS, >>Geometrie, 0.002)
            );

        END v_Bezirksgrenzabschnitt;

        VIEW v_Kantonsgrenzabschnitt
            PROJECTION OF DMAV_HoheitsgrenzenAV_V1_0.HoheitsgrenzenAV.Kantonsgrenzabschnitt;
        =
            ALL OF Kantonsgrenzabschnitt;

            !!@ ilivalid.msg="Grenzverlauf der Kantonsgrenze muss identisch mit Bezirksgrenze sein";
            !!@ ilivalid.msg_de="Grenzverlauf der Kantonsgrenze muss identisch mit Bezirksgrenze sein";
            !!@ ilivalid.msg_fr="Le tracé de la limite du canton doit être identique au tracé de la limite de district";
            !!@ ilivalid.msg_it="L'andamento del confine cantonale deve corrispondere con quelli comunali";
            !! Umsetzung Phase 1;
            MANDATORY CONSTRAINT CH130153: (
                DMAVTYM_Topologie_V1_1.coversWithTolerance(ObjectPool.allObjects(>DMAV_HoheitsgrenzenAV_V1_0.HoheitsgrenzenAV.Bezirksgrenzabschnitt), >>DMAV_HoheitsgrenzenAV_V1_0.HoheitsgrenzenAV.Bezirksgrenzabschnitt->Geometrie, THIS, >>Geometrie, 0.002)
            );

        END v_Kantonsgrenzabschnitt;

    END HoheitsgrenzenAV_Validierung;

    VIEW TOPIC Toleranzstufen_Validierung = 
    DEPENDS ON DMAV_Toleranzstufen_V1_0.Toleranzstufen;
  
        VIEW v_Toleranzstufe
            PROJECTION OF TS ~ DMAV_Toleranzstufen_V1_0.Toleranzstufen.Toleranzstufe;
        =
            ALL OF TS;

            !!@ ilivalid.msg="Flächenperimeter muss mit Referenzperimeter der Liegenschaften übereinstimmen (Toleranz 2 mm)";
            !!@ ilivalid.msg_de="Flächenperimeter muss mit Referenzperimeter der Liegenschaften übereinstimmen (Toleranz 2 mm)";
            !!@ ilivalid.msg_fr="Le périmètre doit être identique au périmètre de référence des biens-fonds (tolérance 2 mm)";
            !!@ ilivalid.msg_it="Il perimetro deve coincidere con il perimetro di riferimento del bene immobile (Tolleranza 2 mm)";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            SET CONSTRAINT CH160351 WHERE DEFINED(Entstehung) AND NOT(DEFINED(Untergang)):
                DMAV_vergleichePerimeter(DMAV_Perimeter(ALL,"Geometrie"),"Liegenschaft",0.002);
            */
        
        END v_Toleranzstufe;

    END Toleranzstufen_Validierung;       

    VIEW TOPIC Gebaeudeadressen_Validierung = 
    DEPENDS ON DMAV_Gebaeudeadressen_V1_0.Gebaeudeadressen;
  
        VIEW v_Gebaeudeeingang
            PROJECTION OF DMAV_Gebaeudeadressen_V1_0.Gebaeudeadressen.Gebaeudeeingang;
        =
            ALL OF Gebaeudeeingang;

            !!@ ilivalid.check = warning
            !!@ ilivalid.msg="Status=real muss mit Status von Lokalisation übereinstimmen";
            !!@ ilivalid.msg_de="Status=real muss mit Status von Lokalisation übereinstimmen";
            !!@ ilivalid.msg_fr="Validite=reel doit correspondre a la validite de la localisation";
            !!@ ilivalid.msg_it="Stato=reale deve corrispondere con lo stato della Localizzazione";
            MANDATORY CONSTRAINT CH193851: (
                (Gebaeudestatus == #real) => (Lokalisation->Lokalisationsstatus == #real)
            );

            !!@ ilivalid.msg="Bei Status=projektiert muss AttributeProvisorisch=true sein";
            !!@ ilivalid.msg_de="Bei Status=projektiert muss AttributeProvisorisch=true sein";
            !!@ ilivalid.msg_fr="Si Validite=projete, il faut que Attributs_provisoires=true";
            !!@ ilivalid.msg_it="Per la Validità= in progetto, il campo Attributi_provvisori deve essere = true";
            MANDATORY CONSTRAINT CH194051: (
                (Gebaeudestatus == #projektiert) => (AttributeProvisorisch == #true)
            );

            !!@ ilivalid.msg="Gebäudeeingang muss innerhalb einer Gebäudefläche liegen oder der Attributwert von ImModul ist falsch";
            !!@ ilivalid.msg_de="Gebäudeeingang muss innerhalb einer Gebäudefläche liegen oder der Attributwert von ImModul ist falsch";
            !!@ ilivalid.msg_fr="L'EntreeBatiment doit être située à l'intérieur d'une surface de bâtiment ou la valeur de l'attribut DansModule n'est pas correcte";
            !!@ ilivalid.msg_it="L'ingresso dell'edificio deve trovarsi all'interno di un'area edificabile o il valore dell'attributo NelModulo non è corretto.";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT CH194254: (
                DEFINED(ImModul) => DMAV_GebaeudeIn(Geometrie,ImModul)
            );
            */

            !!@ ilivalid.check = warning
            !!@ ilivalid.msg="In Hausnummer (Polizeinummer oder Gebaeudeversicherungsnummer) darf vor, zwischen oder nach Hausnummer und Buchstabenzusatz kein Leerschlag oder kein Trennzeichen sein";
            !!@ ilivalid.msg_de="In Hausnummer (Polizeinummer oder Gebaeudeversicherungsnummer) darf vor, zwischen oder nach Hausnummer und Buchstabenzusatz kein Leerschlag oder kein Trennzeichen sein";
            !!@ ilivalid.msg_fr="Il n'est pas licite d'insérer un espace ou un signe quelconque avant, entre, ou après le numéro de maison et sa particule (lettre). Concerne aussi le numéro de police ou le numéro d'assurance du bâtiment";
            !!@ ilivalid.msg_it="Per il Numero_casa, tra il numero e la lettera non devono esistere spazi vuoti,sottolineature o tratti";
            MANDATORY CONSTRAINT CH194451: (
                matches(Hausnummer,"^[^\\s]+$")
            );

            !!@ ilivalid.msg="EGID und EDID müssen zusammen eindeutig sein";
            !!@ ilivalid.msg_de="EGID und EDID müssen zusammen eindeutig sein";
            !!@ ilivalid.msg_fr="La combinaison des identifiants EGID et EDID doit être univoque";
            !!@ ilivalid.msg_it="REA_EGID e EDID devono, insieme, essere univoci";
            UNIQUE CH194651: EGID, EDID;

            !!@ ilivalid.msg="Bei Gebaeudeeingang mit EGID fehlt der zugehörige EDID";
            !!@ ilivalid.msg_de="Bei Gebaeudeeingang mit EGID fehlt der zugehörige EDID";
            !!@ ilivalid.msg_fr="Une entrée de bâtiment possédant un identifiant EGID devrait aussi posséder un identifiant GWR_EDID";
            !!@ ilivalid.msg_it="Per l'entrata di edificio con REA_EGID, manca il relativo REA_EDID";
            MANDATORY CONSTRAINT CH194751: (
                DEFINED(EGID) => DEFINED(EDID)
            );

            !!@ ilivalid.msg="Der gleiche EGID, EDID wird für verschiedene Gebäude verwendet";
            !!@ ilivalid.msg_de="Der gleiche EGID, EDID wird für verschiedene Gebäude verwendet";
            !!@ ilivalid.msg_fr="Le même EGID, EDID est renseigné pour plusieurs bâtiments différents";
            !!@ ilivalid.msg_it="LLo stesso EGID, EDID è assegnato a più edifici differenti";
            !! Umsetzung Phase 1; -> Kommentar Romedi: Gilt nur innerhalb eines Operats. Vergleich eindeutige EGID in Gebäudenummer und Gebäudeeingang
            /*
            SET CONSTRAINT GWRA09a: WHERE (Gebaeudestatus == #real):
                EGID,EDID;
            */
            UNIQUE GWRA09a : WHERE (Gebaeudestatus == #real): EGID;

            !!@ ilivalid.msg="EGID von Gebaeude=gueltig in Topic BB und EGID des entsprechenden Gebaeudeeinganges in Topic GEB (Im_Gebaeude=BB + Status=real) stimmen nicht überein";
            !!@ ilivalid.msg_de="EGID von Gebaeude=gueltig in Topic BB und EGID des entsprechenden Gebaeudeeinganges in Topic GEB (Im_Gebaeude=BB + Status=real) stimmen nicht überein";
            !!@ ilivalid.msg_fr="L'EGID de Batiment=valable dans le topic CS et l'EGID de lentrée correspondante dans le topic BAT (Dans_batiment=CS + Validite=reel) ne correspondent pas";
            !!@ ilivalid.msg_it="L'EGID dell'edificio=valevole nel topic CS e l'EGID della rispettiva entrata nel topic IE (In_Edificio=CS + Validita=reale) non corrispondono";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT GWRA17: (
                DMAV_GWR("A17")
            );
            */

            !!@ ilivalid.msg="Die in der AV verwendete Lokalisation wurde im GWR nicht gefunden";
            !!@ ilivalid.msg_de="Die in der AV verwendete Lokalisation wurde im GWR nicht gefunden";
            !!@ ilivalid.msg_fr="La localisation utilisée dans la MO n'a pas été trouvée dans le RegBL";
            !!@ ilivalid.msg_it="La localizzazione presente nella MU non si trova nel REA";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 3;
            /*
            MANDATORY CONSTRAINT GWRB01: (
                DMAV_GWR("B01")
            );
            */

            !!@ ilivalid.msg="Im GWR verwendete Strassenbezeichnung wird in der AV nicht geführt";
            !!@ ilivalid.msg_de="Im GWR verwendete Strassenbezeichnung wird in der AV nicht geführt";
            !!@ ilivalid.msg_fr="La désignation de la rue utilisée dans le RegBL n'existe pas dans la MO";
            !!@ ilivalid.msg_it="La designazione della via presente nel REA non si trova nella MU";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 3;
            /*
            MANDATORY CONSTRAINT GWRB02: (
                DMAV_GWR("B02")
            );
            */

            !!@ ilivalid.msg="Lokalisation fehlt in der AV";
            !!@ ilivalid.msg_de="Lokalisation fehlt in der AV";
            !!@ ilivalid.msg_fr="Localisation manquante dans la MO";
            !!@ ilivalid.msg_it="Manca la localizzazione nella MU";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            MANDATORY CONSTRAINT GWRB03: (
                DEFINED(Lokalisation)
            );

            !!@ ilivalid.msg="Hausnummer fehlt in der AV";
            !!@ ilivalid.msg_de="Hausnummer fehlt in der AV";
            !!@ ilivalid.msg_fr="Numéro de maison manquant dans la MO";
            !!@ ilivalid.msg_it="Nella MU manca il numero civico";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 2;
            MANDATORY CONSTRAINT GWRB04: (
                DEFINED(Lokalisation) => DEFINED(Hausnummer)
            );

            !!@ ilivalid.msg="Die Gebäudeadresse in der AV ist nicht eindeutig";
            !!@ ilivalid.msg_de="Die Gebäudeadresse in der AV ist nicht eindeutig";
            !!@ ilivalid.msg_fr="L'EGID n'existe pas dans le RegBL";
            !!@ ilivalid.msg_it="L'indirizzo dell'edificio nella MU non è univoco";
            !! Umsetzung Phase 2;
            /*
            MANDATORY CONSTRAINT GWRB05: (
                (Gebaeudestatus == #real) => DMAV_GWR("B05")
            );
            */

            !!@ ilivalid.msg="EGID existiert nicht im GWR";
            !!@ ilivalid.msg_de="EGID existiert nicht im GWR";
            !!@ ilivalid.msg_fr="Si Validite=projete, il faut que Attributs_provisoires=true";
            !!@ ilivalid.msg_it="L'EGID non esiste nel REA";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 3;
            /*
            MANDATORY CONSTRAINT GWRC02: (
                DEFINED(EGID) => DMAV_GWR("C02")
            );
            */

            !!@ ilivalid.msg="Kombination EGID/EDID existiert nicht im GWR";
            !!@ ilivalid.msg_de="Kombination EGID/EDID existiert nicht im GWR";
            !!@ ilivalid.msg_fr="La combinaison EGID/EDID n'existe pas dans le RegBL";
            !!@ ilivalid.msg_it="La combinazione EGID/EDID non esiste nel REA";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 3;
            /*
            MANDATORY CONSTRAINT GWRC03: (
                (DEFINED(EGID) AND DEFINED(EDID)) => DMAV_GWR("C03")
            );
            */

            !!@ ilivalid.msg="EGID (bestehend) aus dem GWR ist in der AV nicht vorhanden (auch nicht projektiert)";
            !!@ ilivalid.msg_de="EGID (bestehend) aus dem GWR ist in der AV nicht vorhanden (auch nicht projektiert)";
            !!@ ilivalid.msg_fr="EGID (existant) du RegBL n'existe pas dans la MO et n'est pas non plus en projet";
            !!@ ilivalid.msg_it="L'EGID (esistente) nel REA non è presente nella MU neppure sotto forma di progetto";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 3;
            /*
            MANDATORY CONSTRAINT GWRC04: (
                DMAV_GWR("C04")
            );
            */

            !!@ ilivalid.msg="EGID (bestehend) aus dem GWR ist in der AV nicht nachgeführt";
            !!@ ilivalid.msg_de="EGID (bestehend) aus dem GWR ist in der AV nicht nachgeführt";
            !!@ ilivalid.msg_fr="EGID (existant) du RegBL n'est pas mis à jour dans la MO";
            !!@ ilivalid.msg_it="L'EGID (esistente) nel REA non è aggiornato nella MU";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 3;
            /*
            MANDATORY CONSTRAINT GWRC05: (
                DMAV_GWR("C05")
            );
            */

            !!@ ilivalid.msg="EGID (projektiert/bewilligt/im Bau/nicht realisiert) aus dem GWR ist in der AV real";
            !!@ ilivalid.msg_de="EGID (projektiert/bewilligt/im Bau/nicht realisiert) aus dem GWR ist in der AV real";
            !!@ ilivalid.msg_fr="EGID (en projet / autorisé / en construction / non réalisé) du RegBL est réel dans la MO";
            !!@ ilivalid.msg_it="L'EGID (progettato / autorizzato / in fase di realizzazione / non realizzato) nel REA è reale nella MU";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 3;
            /*
            MANDATORY CONSTRAINT GWRC07: (
                DMAV_GWR("C07")
            );
            */

            !!@ ilivalid.msg="Identische Gebäudeadresse mit unterschiedlicher EGID/EDID in AV und GWR";
            !!@ ilivalid.msg_de="Identische Gebäudeadresse mit unterschiedlicher EGID/EDID in AV und GWR";
            !!@ ilivalid.msg_fr="Adresse du bâtiment identique entre la MO et le RegBL avec un EGID/EDID différent";
            !!@ ilivalid.msg_it="Indirizzi identici con differenti EGID/EDID nella MU e nel REA";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 3;
            /*
            MANDATORY CONSTRAINT GWRC08: (
                DMAV_GWR("C08")
            );
            */

            !!@ ilivalid.msg="Identischer EGID/EDID mit unterschiedlicher Gebäudeadresse in AV und GWR";
            !!@ ilivalid.msg_de="Identischer EGID/EDID mit unterschiedlicher Gebäudeadresse in AV und GWR";
            !!@ ilivalid.msg_fr="EGID/EDID identique avec adresse du bâtiment différente entre la MO et le RegBL";
            !!@ ilivalid.msg_it="EGID/EDID identici con differenti indirizzi dell'edificio nella MU e nel REA";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 3;
            /*
            MANDATORY CONSTRAINT GWRC09: (
                DMAV_GWR("C09")
            );
            */

            !!@ ilivalid.msg="EGID/EDID und Gebäudeadresse bis auf PLZ/Ortschaft in AV und GWR identisch";
            !!@ ilivalid.msg_de="EGID/EDID und Gebäudeadresse bis auf PLZ/Ortschaft in AV und GWR identisch";
            !!@ ilivalid.msg_fr="EGID/EDID et adresse du bâtiment identiques dans la MO et le RegBL à l'exception de NPA/localité";
            !!@ ilivalid.msg_it="L'indirizzo dell'edificio e l'EGID/EDID sono identici nella MU e nel REA ma non i CAP/località";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 3;
/*             MANDATORY CONSTRAINT GWRC10: (
                DMAV_GWR("C10")
            ); */

            !!@ ilivalid.msg="Das Gebäude zählt weniger Eingänge in der AV als im GWR";
            !!@ ilivalid.msg_de="Das Gebäude zählt weniger Eingänge in der AV als im GWR";
            !!@ ilivalid.msg_fr="Le bâtiment compte moins d'entrées dans la MO que dans le RegBL";
            !!@ ilivalid.msg_it="L'edificio ha meno entrate nella MU che nel REA";
            !! Kategorie: modellübergreifend
            !! Umsetzung Phase 3;
            /*/
            MANDATORY CONSTRAINT GWRC13: (
                DMAV_GWR("C13")
            );
            */

            !!@ ilivalid.msg="Eingang (EDID) ohne EGID in der Tabelle Gebaeudeeingang";
            !!@ ilivalid.msg_de="Eingang (EDID) ohne EGID in der Tabelle Gebaeudeeingang";
            !!@ ilivalid.msg_fr="Entrée (EDID) sans EGID dans la table Entree batiment";
            !!@ ilivalid.msg_it="Entrata (EDID) senza EGID nella tabella Entrata edificio";
            !! Umsetzung Phase 1;
            MANDATORY CONSTRAINT GWRA14 : DEFINED(EDID) => DEFINED(EGID);

        END v_Gebaeudeeingang;

    END Gebaeudeadressen_Validierung;

END DMAV_V1_0_Validierung.
